To do after installing Linux:

Note: to change the environment PATH variable, go to /etc/environment and separate
entries using a colon.


~ Follow tutorial here <https://www.howtogeek.com/howto/35807/how-to-harmonize-your-dual-boot-setup-for-windows-and-ubuntu/> to setup
    shared NTFS Windows-Linux storage partition.
   Generally, the steps are:
    i)  Backup fstab:
         `sudo cp /etc/fstab /etc/fstab.backup`
    ii) Get UUID of storage partition
         `sudo blkid`
    iii) Edit fstab to mount storage NTFS partition automatically. Paste at bottom
         of fstab:
            `
            # storage mount
            UUID=[UUID_of_storage] /media/storage/    ntfs-3g        auto,dmask=022,fmask=011,uid=1000,gid=1000,rw 0 0
            `
         where [UUID] is the UUID of the storage partition from step (ii),
         /media/storage is the new mount point, ntfs-3g is the driver
         used to read NTFS, dmask is directory permissions (need to be
         rwx for owner), fmask is file permissions (need to not be executable
         so that I can read txt files easily), uid/gid set owner to user (note:
         this may have to change depending on installation; run `id -u` to get
         userid and `id -g` to get groupid).
    iv) Edit ~/.config/user-dirs.dirs to point to storage partition's Documents,
        Picturs, Music, and Video folders


~ Install correct drivers (super important!!). Will need `quiet splash nomodeset` along with the drivers in "Nvidia installations.txt" or similar (there might be some that are more up-to-date). See my reddit post here (https://www.reddit.com/r/linuxquestions/comments/eqdugr/any_way_to_diable_my_gpu_before_boot/fet00g0?utm_source=share&utm_medium=web2x).


~ Install updates.


~ Fix Linux/Windows time configuration
    "gksudo gedit /etc/default/rcS" --> add/change "UTC=yes"
    "timedatectl set-local-rtc 1"  #Changes from UTC to local (Windows uses local)
    #If you want to switch back to UTC on Linux, replace "1" with "0"


~ Change desktop background automatically upon each login
   Make script below ("change_desktop_background.sh") and add to startup
   applications.
   """
#! /bin/bash
#Changes desktop background randomly
DIR="/usr/share/backgrounds/linuxmint-all"
PIC=$(ls $DIR/* | shuf -n1)
#Line below will change based on Cinnamon vs Ubuntu
gsettings set org.cinnamon.desktop.background picture-uri  "file://$PIC"
    """


~ Turn off Windows quick-boot
If Linux won't boot randomly and only goes into emergency mode, boot into Windows and run
    "shutdown /s /t 5"
        /s = shutdown
        /r = restart
        /t [number] = timeout
    Note: this is only if you didn't change any settings to break Linux (e.g. changing
    drivers). Once, Windows wouldn't let go of my shared Storage partition, even after
    shutting down. Running shutdown in command prompt helped for some reason.


~ Turn off automatic installation of all printers on network
    in  /etc/cups/cupsd.conf  and/or  /etc/cups/cups-browsed.conf
    change the following lines (if present or commented->uncommented) to:
    `Browsing Off`
    `BrowseLocalProtocols none`
    `BrowseProtocols none`


~ To install Java, you'll want to remove the underscore for the directory name.
    -First, install Java to /usr/
    -Rename the directory to just "java" and remove jdk_1.*.* name in folder
    -Copy and paste the following to the bottom of ~/.profile (or /etc/profile if
     the former didn't work):
        JAVA_HOME="/usr/java"
        PATH="$PATH:$JAVA_HOME/bin"
        export JAVA_HOME
        export PATH
    -Run `source /etc/environment`

    If the above didn't work, then:
    -Edit /etc/environment:
        Add `JAVA_HOME=/usr/java/bin` under the PATH line
        Add `:$JAVA_HOME/bin` to end of PATH line to add the bin folder to path
    -In terminal, run `source /etc/environment` to update environment variables.


~ To install latest Python (since apt doesn't have Python > 3.5)
    ```
    sudo apt update
    sudo apt install software-properties-common
    sudo add-apt-repository ppa:deadsnakes/ppa
    sudo apt install python3.9
    ```
    Then add to .profile
    `alias python3=python3.9`


~ Set numlock to always be on:
    Keyboard (settings) -> Layouts -> Options -> Miscellaneous ->
    Activate:
        `Default Numeric Keys`
        `Numeric keypad always enter digits`
    Also set in startup applications:
        Startup Apps -> Add:
            Title: Turn on numlock
            Command: numlockx on
            Startup delay: 10


~ Add useful keyboard shortcuts:
    * System > Lock screen > Super+L
    * Custom:
        - Open sublime: subl
        - Home button to play/pause Spotify (for Kinesis keyboard): dbus-send --print-reply --dest=org.mpris.MediaPlayer2.spotify /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause


~ Import terminal profile settings:
    Import:
        dconf load /org/gnome/terminal/ < gnome_terminal_settings.txt
    Export:
        dconf dump /org/gnome/terminal/ > gnome_terminal_settings.txt


~ Allow webpack to auto-recompile code (sometimes not allowed by certain installations):
    Run:
        echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
    Reference:
        https://github.com/webpack/docs/wiki/troubleshooting#not-enough-watchers


~ In Linux, after installing Mozc and IBus (for Japanese input):
    Mozc settings -> Keymap style -> Customize
    Repeat for Direct Input, Composition, and Precomposition:
        Ctrl ` --> Set input mode to Hiragana
        Ctrl 1 --> Set input mode to full-width Katakana


~ For LaTeX (TexLive), run the following commands:
    - tlmgr init-usertree
    - sudo tlmgr update --all
    If that fails, you'll have to switch to the old repo (tlmgr not supported in new one): tlmgr option repository ftp://tug.org/historic/systems/texlive/2015/tlnet-final
        - Use sudo for installing things


~ If dual-booting, convert the disk from MBR (Master Boot Record) to GPT (GUID):
    1. Install Linux first so Grub is accessible.
    2. Change BIOS to boot using UEFI instead of Legacy.
    3. If the Linux install didn't automatically convert the disk to GPT:
        i. Use MBR2GPT in Windows to convert it: https://docs.microsoft.com/en-us/windows/deployment/mbr-to-gpt
        ii. MBR2GPT prefers to be run in the Windows Preinstallation Environment rather than in a booted OS. It's possible to run in the OS, but you could run into issues, e.g. the system recovery being messed up.


~ If running into issues with GRUB after modifying boot partitions (e.g. deleting/moving partitions you can boot from):
    1. Boot into live Linux USB.
    2. Mount the "Linux filesystem" drive in the USB instance
        `sudo fdisk -l`
        `sudo blkid`
        Get the /dev/sdXX of "Linux Filesystem"
        `sudo mount /dev/sdXX /mnt` to mount that partition into /mnt/ directory
    3. Run "Boot repair" (in start menu) or `boot-repair` (in terminal).
        Advanced options
        Uncheck "Secure Boot" (secure boot was disabled above)
        Uncheck "Repair Windows boot loader" (Windows data should be totally fine, only GRUB is messed up)
    4. Reboot into Linux on hard drive and re-run GrubCustomizer to customize as desired.
