/**** Fat jar ****/
task fatJar(type: Jar) {
    // Include sources from built-in Jar task
    from sourceSets.main.output

    manifest {
        attributes('Main-Class':'<package.mainClass>')
    }

    // Copy dependencies into jar
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    // Exclude signature files
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
}


/* Libs separate from jar */
task libJar(type: Jar) {
    // Include sources from built-in Jar task
    from sourceSets.main.output

    // Set destination locations (optional)
    def jarDir = file("$rootDir/dist")
    def libName = "libs"
    def libDir = file("$jarDir/$libName")
    destinationDir = jarDir

    // Copy dependencies to 'libName' folder
    copy {
        from configurations.compile
        into libDir
    }

    // Include all libraries in classpath
    manifest {
        attributes (
            'Main-Class':'<package.mainClass>',
            'Class-Path': configurations.compile.files.collect { "$libName/$it.name" }.join(' ')
        )
    }

    // Exclude signature files
    exclude('META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA')
}
